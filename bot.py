import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# üîπ Google Sheets API –±–∞–ø—Ç–∞—É
SCOPE = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
CREDS_FILE = "drive.json"  # Service Account JSON —Ñ–∞–π–ª—ã
SPREADSHEET_ID = "1YHih90nQMOfh-Z1ak9xbUdwYNA-_IBooODyOaJB-AKQ"  # –ú“±–Ω–¥–∞ ”©–∑ ID-“£–¥—ñ –∂–∞–∑

creds = ServiceAccountCredentials.from_json_keyfile_name(CREDS_FILE, SCOPE)
client = gspread.authorize(creds)
sheet = client.open_by_key(SPREADSHEET_ID).sheet1  # ID –∞—Ä“õ—ã–ª—ã –∞—à—É

# üîπ /start –∫–æ–º–∞–Ω–¥–∞—Å—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–°”ô–ª–µ–º! –ú–∞“ì–∞–Ω –ñ–°–ù-—ñ“£—ñ–∑–¥—ñ –∂–∞–∑—ã“£—ã–∑, –º–µ–Ω –ø–∞—Ä–æ–ª—å–¥—ñ —Ç–∞–±–∞–º—ã–Ω.")

# üîπ –ñ–°–ù –µ–Ω–≥—ñ–∑–≥–µ–Ω –∫–µ–∑–¥–µ
async def find_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    jsn = update.message.text.strip()
    
    if not jsn.isdigit():
        await update.message.reply_text("–ñ–°–ù —Ç–µ–∫ —Ü–∏—Ñ—Ä–¥–∞–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫!")
        return

    data = sheet.get_all_records()
    df = pd.DataFrame(data)

    result = df[df['JSN'].astype(str) == jsn]
    if not result.empty:
        password = result.iloc[0]['Password']
        await update.message.reply_text(f"–°—ñ–∑–¥—ñ“£ –ø–∞—Ä–æ–ª—ñ“£—ñ–∑: {password}")
    else:
        await update.message.reply_text("–ë“±–ª –ñ–°–ù –±–æ–π—ã–Ω—à–∞ –ø–∞—Ä–æ–ª—å —Ç–∞–±—ã–ª–º–∞–¥—ã.")

# üîπ Telegram –±–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É
import os
TOKEN = os.getenv("BOT_TOKEN")

app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, find_password))

print("Bot is running...")
app.run_polling()
